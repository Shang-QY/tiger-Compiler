状态 1 conflicts: 1 shift/reduce
状态 28 conflicts: 1 shift/reduce
状态 31 conflicts: 1 shift/reduce


语法

    0 $accept: program $end

    1 program: exp

    2 exp: LPAREN seqexp RPAREN
    3    | LET decs IN seqexp END
    4    | lvalue ASSIGN exp
    5    | IF exp THEN exp
    6    | IF exp THEN exp ELSE exp
    7    | WHILE exp DO exp
    8    | FOR ID ASSIGN exp TO exp DO exp
    9    | BREAK
   10    | lvalue
   11    | NIL
   12    | INT
   13    | STRING
   14    | MINUS exp
   15    | ID LPAREN args RPAREN
   16    | exp PLUS exp
   17    | exp MINUS exp
   18    | exp TIMES exp
   19    | exp DIVIDE exp
   20    | exp EQ exp
   21    | exp NEQ exp
   22    | exp LT exp
   23    | exp GT exp
   24    | exp LE exp
   25    | exp GE exp
   26    | exp AND exp
   27    | exp OR exp
   28    | ID LBRACE recorditems RBRACE
   29    | ID LBRACK exp RBRACK OF exp

   30 exps: exp
   31     | exp SEMICOLON exps
   32     | %empty

   33 seqexp: exps

   34 recorditem: ID EQ exp

   35 recorditems: recorditem
   36            | recorditem COMMA recorditems
   37            | %empty

   38 args: exp
   39     | exp COMMA args
   40     | %empty

   41 tyfield: ID COLON ID

   42 tyfields: tyfield
   43         | tyfield COMMA tyfields
   44         | %empty

   45 ty: ID
   46   | LBRACE tyfields RBRACE
   47   | ARRAY OF ID

   48 tydec: TYPE ID EQ ty

   49 tydecs: tydec
   50       | tydec tydecs

   51 vardec: VAR ID ASSIGN exp
   52       | VAR ID COLON ID ASSIGN exp

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   55 fundecs: fundec
   56        | fundec fundecs

   57 dec: tydecs
   58    | vardec
   59    | fundecs

   60 decs: dec
   61     | dec decs

   62 lvalue: ID
   63       | ID LBRACK exp RBRACK
   64       | lvalue DOT ID
   65       | lvalue LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 8 15 28 29 34 41 45 47 48 51 52 53 54 62 63 64
STRING (259) 13
INT (260) 12
COMMA (261) 36 39 43
COLON (262) 41 52 54
SEMICOLON (263) 31
LPAREN (264) 2 15 53 54
RPAREN (265) 2 15 53 54
LBRACK (266) 29 63 65
RBRACK (267) 29 63 65
LBRACE (268) 28 46
RBRACE (269) 28 46
DOT (270) 64
PLUS (271) 16
MINUS (272) 14 17
TIMES (273) 18
DIVIDE (274) 19
EQ (275) 20 34 48 53 54
NEQ (276) 21
LT (277) 22
LE (278) 24
GT (279) 23
GE (280) 25
AND (281) 26
OR (282) 27
ASSIGN (283) 4 8 51 52
ARRAY (284) 47
IF (285) 5 6
THEN (286) 5 6
ELSE (287) 6
WHILE (288) 7
FOR (289) 8
TO (290) 8
DO (291) 7 8
LET (292) 3
IN (293) 3
END (294) 3
OF (295) 29 47
BREAK (296) 9
NIL (297) 11
FUNCTION (298) 53 54
VAR (299) 51 52
TYPE (300) 48
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    左： 0
program (48)
    左： 1, 右： 0
exp (49)
    左： 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29, 右： 1 4 5 6 7 8 14 16 17 18 19 20 21 22 23
    24 25 26 27 29 30 31 34 38 39 51 52 53 54 63 65
exps (50)
    左： 30 31 32, 右： 31 33
seqexp (51)
    左： 33, 右： 2 3
recorditem (52)
    左： 34, 右： 35 36
recorditems (53)
    左： 35 36 37, 右： 28 36
args (54)
    左： 38 39 40, 右： 15 39
tyfield (55)
    左： 41, 右： 42 43
tyfields (56)
    左： 42 43 44, 右： 43 46 53 54
ty (57)
    左： 45 46 47, 右： 48
tydec (58)
    左： 48, 右： 49 50
tydecs (59)
    左： 49 50, 右： 50 57
vardec (60)
    左： 51 52, 右： 58
fundec (61)
    左： 53 54, 右： 55 56
fundecs (62)
    左： 55 56, 右： 56 59
dec (63)
    左： 57 58 59, 右： 60 61
decs (64)
    左： 60 61, 右： 3 61
lvalue (65)
    左： 62 63 64 65, 右： 4 10 64 65


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  转到状态 12
    exp      转到状态 13
    lvalue   转到状态 14


State 1

   15 exp: ID . LPAREN args RPAREN
   28    | ID . LBRACE recorditems RBRACE
   29    | ID . LBRACK exp RBRACK OF exp
   62 lvalue: ID .
   63       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 62 (lvalue)]
    $default  reduce using rule 62 (lvalue)


State 2

   13 exp: STRING .

    $default  reduce using rule 13 (exp)


State 3

   12 exp: INT .

    $default  reduce using rule 12 (exp)


State 4

    2 exp: LPAREN . seqexp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 32 (exps)

    exp     转到状态 18
    exps    转到状态 19
    seqexp  转到状态 20
    lvalue  转到状态 14


State 5

   14 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 21
    lvalue  转到状态 14


State 6

    5 exp: IF . exp THEN exp
    6    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 22
    lvalue  转到状态 14


State 7

    7 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 23
    lvalue  转到状态 14


State 8

    8 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


State 9

    3 exp: LET . decs IN seqexp END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    tydec    转到状态 28
    tydecs   转到状态 29
    vardec   转到状态 30
    fundec   转到状态 31
    fundecs  转到状态 32
    dec      转到状态 33
    decs     转到状态 34


State 10

    9 exp: BREAK .

    $default  reduce using rule 9 (exp)


State 11

   11 exp: NIL .

    $default  reduce using rule 11 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 35


State 13

    1 program: exp .
   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 1 (program)


State 14

    4 exp: lvalue . ASSIGN exp
   10    | lvalue .
   64 lvalue: lvalue . DOT ID
   65       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 48
    DOT     shift, and go to state 49
    ASSIGN  shift, and go to state 50

    $default  reduce using rule 10 (exp)


State 15

   15 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 40 (args)

    exp     转到状态 51
    args    转到状态 52
    lvalue  转到状态 14


State 16

   29 exp: ID LBRACK . exp RBRACK OF exp
   63 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 53
    lvalue  转到状态 14


State 17

   28 exp: ID LBRACE . recorditems RBRACE

    ID  shift, and go to state 54

    $default  reduce using rule 37 (recorditems)

    recorditem   转到状态 55
    recorditems  转到状态 56


State 18

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   30 exps: exp .
   31     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 57
    PLUS       shift, and go to state 36
    MINUS      shift, and go to state 37
    TIMES      shift, and go to state 38
    DIVIDE     shift, and go to state 39
    EQ         shift, and go to state 40
    NEQ        shift, and go to state 41
    LT         shift, and go to state 42
    LE         shift, and go to state 43
    GT         shift, and go to state 44
    GE         shift, and go to state 45
    AND        shift, and go to state 46
    OR         shift, and go to state 47

    $default  reduce using rule 30 (exps)


State 19

   33 seqexp: exps .

    $default  reduce using rule 33 (seqexp)


State 20

    2 exp: LPAREN seqexp . RPAREN

    RPAREN  shift, and go to state 58


State 21

   14 exp: MINUS exp .
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token PLUS resolved as reduce (PLUS < UMINUS).
    Conflict between rule 14 and token MINUS resolved as reduce (MINUS < UMINUS).
    Conflict between rule 14 and token TIMES resolved as reduce (TIMES < UMINUS).
    Conflict between rule 14 and token DIVIDE resolved as reduce (DIVIDE < UMINUS).
    Conflict between rule 14 and token EQ resolved as reduce (EQ < UMINUS).
    Conflict between rule 14 and token NEQ resolved as reduce (NEQ < UMINUS).
    Conflict between rule 14 and token LT resolved as reduce (LT < UMINUS).
    Conflict between rule 14 and token LE resolved as reduce (LE < UMINUS).
    Conflict between rule 14 and token GT resolved as reduce (GT < UMINUS).
    Conflict between rule 14 and token GE resolved as reduce (GE < UMINUS).
    Conflict between rule 14 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 14 and token OR resolved as reduce (OR < UMINUS).


State 22

    5 exp: IF exp . THEN exp
    6    | IF exp . THEN exp ELSE exp
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    THEN    shift, and go to state 59


State 23

    7 exp: WHILE exp . DO exp
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 60


State 24

    8 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


State 25

   53 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 62


State 26

   51 vardec: VAR . ID ASSIGN exp
   52       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 63


State 27

   48 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 64


State 28

   49 tydecs: tydec .
   50       | tydec . tydecs

    TYPE  shift, and go to state 27

    TYPE      [reduce using rule 49 (tydecs)]
    $default  reduce using rule 49 (tydecs)

    tydec   转到状态 28
    tydecs  转到状态 65


State 29

   57 dec: tydecs .

    $default  reduce using rule 57 (dec)


State 30

   58 dec: vardec .

    $default  reduce using rule 58 (dec)


State 31

   55 fundecs: fundec .
   56        | fundec . fundecs

    FUNCTION  shift, and go to state 25

    FUNCTION  [reduce using rule 55 (fundecs)]
    $default  reduce using rule 55 (fundecs)

    fundec   转到状态 31
    fundecs  转到状态 66


State 32

   59 dec: fundecs .

    $default  reduce using rule 59 (dec)


State 33

   60 decs: dec .
   61     | dec . decs

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 60 (decs)

    tydec    转到状态 28
    tydecs   转到状态 29
    vardec   转到状态 30
    fundec   转到状态 31
    fundecs  转到状态 32
    dec      转到状态 33
    decs     转到状态 67


State 34

    3 exp: LET decs . IN seqexp END

    IN  shift, and go to state 68


State 35

    0 $accept: program $end .

    $default  接受


State 36

   16 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 69
    lvalue  转到状态 14


State 37

   17 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 70
    lvalue  转到状态 14


State 38

   18 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 71
    lvalue  转到状态 14


State 39

   19 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 72
    lvalue  转到状态 14


State 40

   20 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 73
    lvalue  转到状态 14


State 41

   21 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 74
    lvalue  转到状态 14


State 42

   22 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 75
    lvalue  转到状态 14


State 43

   24 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 76
    lvalue  转到状态 14


State 44

   23 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 77
    lvalue  转到状态 14


State 45

   25 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 78
    lvalue  转到状态 14


State 46

   26 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 79
    lvalue  转到状态 14


State 47

   27 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 80
    lvalue  转到状态 14


State 48

   65 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 81
    lvalue  转到状态 14


State 49

   64 lvalue: lvalue DOT . ID

    ID  shift, and go to state 82


State 50

    4 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 83
    lvalue  转到状态 14


State 51

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   38 args: exp .
   39     | exp . COMMA args

    COMMA   shift, and go to state 84
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 38 (args)


State 52

   15 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 85


State 53

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   29    | ID LBRACK exp . RBRACK OF exp
   63 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 86
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 54

   34 recorditem: ID . EQ exp

    EQ  shift, and go to state 87


State 55

   35 recorditems: recorditem .
   36            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 88

    $default  reduce using rule 35 (recorditems)


State 56

   28 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 89


State 57

   31 exps: exp SEMICOLON . exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 32 (exps)

    exp     转到状态 18
    exps    转到状态 90
    lvalue  转到状态 14


State 58

    2 exp: LPAREN seqexp RPAREN .

    $default  reduce using rule 2 (exp)


State 59

    5 exp: IF exp THEN . exp
    6    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 91
    lvalue  转到状态 14


State 60

    7 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 92
    lvalue  转到状态 14


State 61

    8 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 93
    lvalue  转到状态 14


State 62

   53 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 94


State 63

   51 vardec: VAR ID . ASSIGN exp
   52       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 95
    ASSIGN  shift, and go to state 96


State 64

   48 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 97


State 65

   50 tydecs: tydec tydecs .

    $default  reduce using rule 50 (tydecs)


State 66

   56 fundecs: fundec fundecs .

    $default  reduce using rule 56 (fundecs)


State 67

   61 decs: dec decs .

    $default  reduce using rule 61 (decs)


State 68

    3 exp: LET decs IN . seqexp END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 32 (exps)

    exp     转到状态 18
    exps    转到状态 19
    seqexp  转到状态 98
    lvalue  转到状态 14


State 69

   16 exp: exp . PLUS exp
   16    | exp PLUS exp .
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 16 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 16 and token TIMES resolved as shift (PLUS < TIMES).
    Conflict between rule 16 and token DIVIDE resolved as shift (PLUS < DIVIDE).
    Conflict between rule 16 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 16 and token NEQ resolved as reduce (NEQ < PLUS).
    Conflict between rule 16 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 16 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 16 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 16 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 16 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 16 and token OR resolved as reduce (OR < PLUS).


State 70

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   17    | exp MINUS exp .
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 17 (exp)

    Conflict between rule 17 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 17 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 17 and token TIMES resolved as shift (MINUS < TIMES).
    Conflict between rule 17 and token DIVIDE resolved as shift (MINUS < DIVIDE).
    Conflict between rule 17 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 17 and token NEQ resolved as reduce (NEQ < MINUS).
    Conflict between rule 17 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 17 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 17 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 17 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 17 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 17 and token OR resolved as reduce (OR < MINUS).


State 71

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   18    | exp TIMES exp .
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 18 (exp)

    Conflict between rule 18 and token PLUS resolved as reduce (PLUS < TIMES).
    Conflict between rule 18 and token MINUS resolved as reduce (MINUS < TIMES).
    Conflict between rule 18 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 18 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 18 and token EQ resolved as reduce (EQ < TIMES).
    Conflict between rule 18 and token NEQ resolved as reduce (NEQ < TIMES).
    Conflict between rule 18 and token LT resolved as reduce (LT < TIMES).
    Conflict between rule 18 and token LE resolved as reduce (LE < TIMES).
    Conflict between rule 18 and token GT resolved as reduce (GT < TIMES).
    Conflict between rule 18 and token GE resolved as reduce (GE < TIMES).
    Conflict between rule 18 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 18 and token OR resolved as reduce (OR < TIMES).


State 72

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   19    | exp DIVIDE exp .
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 19 (exp)

    Conflict between rule 19 and token PLUS resolved as reduce (PLUS < DIVIDE).
    Conflict between rule 19 and token MINUS resolved as reduce (MINUS < DIVIDE).
    Conflict between rule 19 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 19 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 19 and token EQ resolved as reduce (EQ < DIVIDE).
    Conflict between rule 19 and token NEQ resolved as reduce (NEQ < DIVIDE).
    Conflict between rule 19 and token LT resolved as reduce (LT < DIVIDE).
    Conflict between rule 19 and token LE resolved as reduce (LE < DIVIDE).
    Conflict between rule 19 and token GT resolved as reduce (GT < DIVIDE).
    Conflict between rule 19 and token GE resolved as reduce (GE < DIVIDE).
    Conflict between rule 19 and token AND resolved as reduce (AND < DIVIDE).
    Conflict between rule 19 and token OR resolved as reduce (OR < DIVIDE).


State 73

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   20    | exp EQ exp .
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)

    Conflict between rule 20 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 20 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 20 and token TIMES resolved as shift (EQ < TIMES).
    Conflict between rule 20 and token DIVIDE resolved as shift (EQ < DIVIDE).
    Conflict between rule 20 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 20 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 20 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 20 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 20 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 20 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 20 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 20 and token OR resolved as reduce (OR < EQ).


State 74

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   21    | exp NEQ exp .
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token PLUS resolved as shift (NEQ < PLUS).
    Conflict between rule 21 and token MINUS resolved as shift (NEQ < MINUS).
    Conflict between rule 21 and token TIMES resolved as shift (NEQ < TIMES).
    Conflict between rule 21 and token DIVIDE resolved as shift (NEQ < DIVIDE).
    Conflict between rule 21 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 21 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 21 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 21 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 21 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 21 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 21 and token AND resolved as reduce (AND < NEQ).
    Conflict between rule 21 and token OR resolved as reduce (OR < NEQ).


State 75

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   22    | exp LT exp .
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)

    Conflict between rule 22 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 22 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 22 and token TIMES resolved as shift (LT < TIMES).
    Conflict between rule 22 and token DIVIDE resolved as shift (LT < DIVIDE).
    Conflict between rule 22 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 22 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 22 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 22 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 22 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 22 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 22 and token AND resolved as reduce (AND < LT).
    Conflict between rule 22 and token OR resolved as reduce (OR < LT).


State 76

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   24    | exp LE exp .
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)

    Conflict between rule 24 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 24 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 24 and token TIMES resolved as shift (LE < TIMES).
    Conflict between rule 24 and token DIVIDE resolved as shift (LE < DIVIDE).
    Conflict between rule 24 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 24 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 24 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 24 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 24 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 24 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 24 and token AND resolved as reduce (AND < LE).
    Conflict between rule 24 and token OR resolved as reduce (OR < LE).


State 77

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   23    | exp GT exp .
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)

    Conflict between rule 23 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 23 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 23 and token TIMES resolved as shift (GT < TIMES).
    Conflict between rule 23 and token DIVIDE resolved as shift (GT < DIVIDE).
    Conflict between rule 23 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 23 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 23 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 23 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 23 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 23 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 23 and token AND resolved as reduce (AND < GT).
    Conflict between rule 23 and token OR resolved as reduce (OR < GT).


State 78

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   25    | exp GE exp .
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)

    Conflict between rule 25 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 25 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 25 and token TIMES resolved as shift (GE < TIMES).
    Conflict between rule 25 and token DIVIDE resolved as shift (GE < DIVIDE).
    Conflict between rule 25 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 25 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 25 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 25 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 25 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 25 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 25 and token AND resolved as reduce (AND < GE).
    Conflict between rule 25 and token OR resolved as reduce (OR < GE).


State 79

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   26    | exp AND exp .
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45

    $default  reduce using rule 26 (exp)

    Conflict between rule 26 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 26 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 26 and token TIMES resolved as shift (AND < TIMES).
    Conflict between rule 26 and token DIVIDE resolved as shift (AND < DIVIDE).
    Conflict between rule 26 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 26 and token NEQ resolved as shift (AND < NEQ).
    Conflict between rule 26 and token LT resolved as shift (AND < LT).
    Conflict between rule 26 and token LE resolved as shift (AND < LE).
    Conflict between rule 26 and token GT resolved as shift (AND < GT).
    Conflict between rule 26 and token GE resolved as shift (AND < GE).
    Conflict between rule 26 and token AND resolved as reduce (%left AND).
    Conflict between rule 26 and token OR resolved as reduce (OR < AND).


State 80

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   27    | exp OR exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46

    $default  reduce using rule 27 (exp)

    Conflict between rule 27 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 27 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 27 and token TIMES resolved as shift (OR < TIMES).
    Conflict between rule 27 and token DIVIDE resolved as shift (OR < DIVIDE).
    Conflict between rule 27 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 27 and token NEQ resolved as shift (OR < NEQ).
    Conflict between rule 27 and token LT resolved as shift (OR < LT).
    Conflict between rule 27 and token LE resolved as shift (OR < LE).
    Conflict between rule 27 and token GT resolved as shift (OR < GT).
    Conflict between rule 27 and token GE resolved as shift (OR < GE).
    Conflict between rule 27 and token AND resolved as shift (OR < AND).
    Conflict between rule 27 and token OR resolved as reduce (%left OR).


State 81

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   65 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 82

   64 lvalue: lvalue DOT ID .

    $default  reduce using rule 64 (lvalue)


State 83

    4 exp: lvalue ASSIGN exp .
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 4 (exp)

    Conflict between rule 4 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 4 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 4 and token TIMES resolved as shift (ASSIGN < TIMES).
    Conflict between rule 4 and token DIVIDE resolved as shift (ASSIGN < DIVIDE).
    Conflict between rule 4 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 4 and token NEQ resolved as shift (ASSIGN < NEQ).
    Conflict between rule 4 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 4 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 4 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 4 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 4 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 4 and token OR resolved as shift (ASSIGN < OR).


State 84

   39 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 40 (args)

    exp     转到状态 51
    args    转到状态 100
    lvalue  转到状态 14


State 85

   15 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 15 (exp)


State 86

   29 exp: ID LBRACK exp RBRACK . OF exp
   63 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 101

    $default  reduce using rule 63 (lvalue)


State 87

   34 recorditem: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 102
    lvalue  转到状态 14


State 88

   36 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 54

    $default  reduce using rule 37 (recorditems)

    recorditem   转到状态 55
    recorditems  转到状态 103


State 89

   28 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 28 (exp)


State 90

   31 exps: exp SEMICOLON exps .

    $default  reduce using rule 31 (exps)


State 91

    5 exp: IF exp THEN exp .
    6    | IF exp THEN exp . ELSE exp
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ELSE    shift, and go to state 104

    $default  reduce using rule 5 (exp)

    Conflict between rule 5 and token PLUS resolved as shift (THEN < PLUS).
    Conflict between rule 5 and token MINUS resolved as shift (THEN < MINUS).
    Conflict between rule 5 and token TIMES resolved as shift (THEN < TIMES).
    Conflict between rule 5 and token DIVIDE resolved as shift (THEN < DIVIDE).
    Conflict between rule 5 and token EQ resolved as shift (THEN < EQ).
    Conflict between rule 5 and token NEQ resolved as shift (THEN < NEQ).
    Conflict between rule 5 and token LT resolved as shift (THEN < LT).
    Conflict between rule 5 and token LE resolved as shift (THEN < LE).
    Conflict between rule 5 and token GT resolved as shift (THEN < GT).
    Conflict between rule 5 and token GE resolved as shift (THEN < GE).
    Conflict between rule 5 and token AND resolved as shift (THEN < AND).
    Conflict between rule 5 and token OR resolved as shift (THEN < OR).
    Conflict between rule 5 and token ELSE resolved as shift (THEN < ELSE).


State 92

    7 exp: WHILE exp DO exp .
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 7 (exp)

    Conflict between rule 7 and token PLUS resolved as shift (DO < PLUS).
    Conflict between rule 7 and token MINUS resolved as shift (DO < MINUS).
    Conflict between rule 7 and token TIMES resolved as shift (DO < TIMES).
    Conflict between rule 7 and token DIVIDE resolved as shift (DO < DIVIDE).
    Conflict between rule 7 and token EQ resolved as shift (DO < EQ).
    Conflict between rule 7 and token NEQ resolved as shift (DO < NEQ).
    Conflict between rule 7 and token LT resolved as shift (DO < LT).
    Conflict between rule 7 and token LE resolved as shift (DO < LE).
    Conflict between rule 7 and token GT resolved as shift (DO < GT).
    Conflict between rule 7 and token GE resolved as shift (DO < GE).
    Conflict between rule 7 and token AND resolved as shift (DO < AND).
    Conflict between rule 7 and token OR resolved as shift (DO < OR).


State 93

    8 exp: FOR ID ASSIGN exp . TO exp DO exp
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    TO      shift, and go to state 105


State 94

   53 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 106

    $default  reduce using rule 44 (tyfields)

    tyfield   转到状态 107
    tyfields  转到状态 108


State 95

   52 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 109


State 96

   51 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 110
    lvalue  转到状态 14


State 97

   48 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 111
    LBRACE  shift, and go to state 112
    ARRAY   shift, and go to state 113

    ty  转到状态 114


State 98

    3 exp: LET decs IN seqexp . END

    END  shift, and go to state 115


State 99

   65 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 65 (lvalue)


State 100

   39 args: exp COMMA args .

    $default  reduce using rule 39 (args)


State 101

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 116
    lvalue  转到状态 14


State 102

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   34 recorditem: ID EQ exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 34 (recorditem)


State 103

   36 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 36 (recorditems)


State 104

    6 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 117
    lvalue  转到状态 14


State 105

    8 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 118
    lvalue  转到状态 14


State 106

   41 tyfield: ID . COLON ID

    COLON  shift, and go to state 119


State 107

   42 tyfields: tyfield .
   43         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 120

    $default  reduce using rule 42 (tyfields)


State 108

   53 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 121


State 109

   52 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 122


State 110

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   51 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 51 (vardec)


State 111

   45 ty: ID .

    $default  reduce using rule 45 (ty)


State 112

   46 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 106

    $default  reduce using rule 44 (tyfields)

    tyfield   转到状态 107
    tyfields  转到状态 123


State 113

   47 ty: ARRAY . OF ID

    OF  shift, and go to state 124


State 114

   48 tydec: TYPE ID EQ ty .

    $default  reduce using rule 48 (tydec)


State 115

    3 exp: LET decs IN seqexp END .

    $default  reduce using rule 3 (exp)


State 116

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   29    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 29 (exp)

    Conflict between rule 29 and token PLUS resolved as shift (OF < PLUS).
    Conflict between rule 29 and token MINUS resolved as shift (OF < MINUS).
    Conflict between rule 29 and token TIMES resolved as shift (OF < TIMES).
    Conflict between rule 29 and token DIVIDE resolved as shift (OF < DIVIDE).
    Conflict between rule 29 and token EQ resolved as shift (OF < EQ).
    Conflict between rule 29 and token NEQ resolved as shift (OF < NEQ).
    Conflict between rule 29 and token LT resolved as shift (OF < LT).
    Conflict between rule 29 and token LE resolved as shift (OF < LE).
    Conflict between rule 29 and token GT resolved as shift (OF < GT).
    Conflict between rule 29 and token GE resolved as shift (OF < GE).
    Conflict between rule 29 and token AND resolved as shift (OF < AND).
    Conflict between rule 29 and token OR resolved as shift (OF < OR).


State 117

    6 exp: IF exp THEN exp ELSE exp .
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 6 (exp)

    Conflict between rule 6 and token PLUS resolved as shift (ELSE < PLUS).
    Conflict between rule 6 and token MINUS resolved as shift (ELSE < MINUS).
    Conflict between rule 6 and token TIMES resolved as shift (ELSE < TIMES).
    Conflict between rule 6 and token DIVIDE resolved as shift (ELSE < DIVIDE).
    Conflict between rule 6 and token EQ resolved as shift (ELSE < EQ).
    Conflict between rule 6 and token NEQ resolved as shift (ELSE < NEQ).
    Conflict between rule 6 and token LT resolved as shift (ELSE < LT).
    Conflict between rule 6 and token LE resolved as shift (ELSE < LE).
    Conflict between rule 6 and token GT resolved as shift (ELSE < GT).
    Conflict between rule 6 and token GE resolved as shift (ELSE < GE).
    Conflict between rule 6 and token AND resolved as shift (ELSE < AND).
    Conflict between rule 6 and token OR resolved as shift (ELSE < OR).


State 118

    8 exp: FOR ID ASSIGN exp TO exp . DO exp
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 125


State 119

   41 tyfield: ID COLON . ID

    ID  shift, and go to state 126


State 120

   43 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 106

    $default  reduce using rule 44 (tyfields)

    tyfield   转到状态 107
    tyfields  转到状态 127


State 121

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 128
    EQ     shift, and go to state 129


State 122

   52 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 130
    lvalue  转到状态 14


State 123

   46 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 131


State 124

   47 ty: ARRAY OF . ID

    ID  shift, and go to state 132


State 125

    8 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 133
    lvalue  转到状态 14


State 126

   41 tyfield: ID COLON ID .

    $default  reduce using rule 41 (tyfield)


State 127

   43 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 43 (tyfields)


State 128

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 134


State 129

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 135
    lvalue  转到状态 14


State 130

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   52 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 52 (vardec)


State 131

   46 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 46 (ty)


State 132

   47 ty: ARRAY OF ID .

    $default  reduce using rule 47 (ty)


State 133

    8 exp: FOR ID ASSIGN exp TO exp DO exp .
   16    | exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 8 (exp)

    Conflict between rule 8 and token PLUS resolved as shift (DO < PLUS).
    Conflict between rule 8 and token MINUS resolved as shift (DO < MINUS).
    Conflict between rule 8 and token TIMES resolved as shift (DO < TIMES).
    Conflict between rule 8 and token DIVIDE resolved as shift (DO < DIVIDE).
    Conflict between rule 8 and token EQ resolved as shift (DO < EQ).
    Conflict between rule 8 and token NEQ resolved as shift (DO < NEQ).
    Conflict between rule 8 and token LT resolved as shift (DO < LT).
    Conflict between rule 8 and token LE resolved as shift (DO < LE).
    Conflict between rule 8 and token GT resolved as shift (DO < GT).
    Conflict between rule 8 and token GE resolved as shift (DO < GE).
    Conflict between rule 8 and token AND resolved as shift (DO < AND).
    Conflict between rule 8 and token OR resolved as shift (DO < OR).


State 134

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 136


State 135

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 53 (fundec)


State 136

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     转到状态 137
    lvalue  转到状态 14


State 137

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . TIMES exp
   19    | exp . DIVIDE exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . LT exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 54 (fundec)
